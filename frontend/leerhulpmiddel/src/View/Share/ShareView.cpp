#include "ShareView.h"
#include "../chooseQuestionView.h"
#include "../ToastMessage.h"

#include <QClipboard>
#include <QGuiApplication>
#include <QMessageBox>
#include <QListWidget>
#include <QPushButton>

ShareView::ShareView(ShareController* controller, QWidget* parent) : QWidget(parent), m_shareController{controller}, m_overlay{new Overlay(parent)}
{

	setWindowFlags(Qt::Popup);
	setAttribute(Qt::WA_DeleteOnClose);

	int popupWidth = parent->width() * 0.5;
	int popupHeight = parent->height() * 0.8;
	setFixedSize(popupWidth, popupHeight);

	QPoint parentCenter = parent->rect().center();
	QPoint globalCenter = parent->mapToGlobal(parentCenter);
	move(globalCenter.x() - width() / 2, globalCenter.y() - height() / 2);

	m_layout = new QVBoxLayout(this);


	//Sets up gray overlay in background
	m_overlay->resizeToParent();
	m_overlay->show();


	setUpQuestionSetChooser();
}


/*
* slot recieved from networkmanager when sharing question sets was successfully put on server
* @param code: the code that was generated by the server
*/
void ShareView::showShareCode(QString code)
{
	m_shareButton->setDisabled(false);


	// Clear the layout
	QLayoutItem* item;
	while ((item = m_layout->takeAt(0))) {
		delete item->widget();
		delete item;
	}

	
	QHBoxLayout* codeBox = new QHBoxLayout();
	codeBox->setAlignment(Qt::AlignCenter);


	QLabel* codeLabel = new QLabel("Your share code: " + code, this);
	codeLabel->setStyleSheet("font-size: 18px; font-weight: bold;");


	QPushButton* copyButton = new QPushButton();
	copyButton->setIcon(QIcon::fromTheme(QIcon::ThemeIcon::EditCopy));
	copyButton->setToolTip("Copy to clipboard");
	copyButton->setFixedSize(24, 24);

	connect(copyButton, &QPushButton::clicked, this, [code]() {
		QClipboard* clipboard = QGuiApplication::clipboard();
		clipboard->setText(code);
	});


	QLabel* friendsLabel = new QLabel("Share with friends:", this);
	QListWidget* friendsList = new QListWidget(this);
	friendsList->setSelectionMode(QAbstractItemView::MultiSelection);

	// Dummy data REPLACE WHEN CAN GET ACTUAL DATA
	QStringList friends = { "Alice", "Bob", "Charlie", "Diana" };

	for (QString i : friends) {
		QListWidgetItem* item = new QListWidgetItem(i, friendsList);
		item->setData(Qt::UserRole, "1234"); // Friend ID
	}

	QPushButton* sendBtn = new QPushButton("Send to Friend", this);
	connect(sendBtn, &QPushButton::clicked, this, [this,friendsList,code]() {

		QList<QListWidgetItem*> selectedItems = friendsList->selectedItems();

		if (!selectedItems.isEmpty()) {
			QList<QString> selectedFriendIDs; 

			QString selectedFriend = friendsList->currentItem()->text();
			for (QListWidgetItem* item : selectedItems) {
				selectedFriendIDs << item->data(Qt::UserRole).toString(); // Friend ID
			}

			m_shareController->shareQuestionSetsWithFriends(selectedFriendIDs,code.toInt());
		}
		else {
			ToastMessage* toast = new ToastMessage("No Friends Selected", this);
			toast->move((width() - toast->width()) / 2, height() - 70);
			toast->show();
		}
		});

	codeBox->addWidget(codeLabel);
	codeBox->addWidget(copyButton);
	m_layout->addLayout(codeBox);
	m_layout->addSpacing(20);
	m_layout->addWidget(friendsLabel);
	m_layout->addWidget(friendsList);
	m_layout->addWidget(sendBtn);
}


/**
* Toast Message to show that sharing question sets failed
*/
void ShareView::showShareFailed()
{
	ToastMessage* toast = new ToastMessage("Failed to share question sets, Something Went Wrong", this);
	toast->move((width() - toast->width()) / 2, height() - 70);
	toast->show();
	m_shareButton->setDisabled(false);
}


/**
* Sets up the ChooseQuestionView with connects to share button
*/
void ShareView::setUpQuestionSetChooser()
{
	m_shareButton = new QPushButton("Share selected questionsets", this);


	ChooseQuestionView* chooseQuestionView = new ChooseQuestionView(true, true);


	m_layout->addWidget(chooseQuestionView);
	m_layout->addWidget(m_shareButton);


	connect(m_shareButton, &QPushButton::pressed, this, [=] {

		QList<QString> questionSetPaths = chooseQuestionView->getQuestionSetPaths();
		if (questionSetPaths.size() == 0) {
			ToastMessage* toast = new ToastMessage("You must select at least one question set", this);
			toast->move((width() - toast->width()) / 2, height() - 70);
			toast->show();
		}

		m_shareController->shareQuestionSets(questionSetPaths);
		m_shareButton->setDisabled(true);

		});
}



ShareView::~ShareView()
{
	m_overlay->deleteLater();
}